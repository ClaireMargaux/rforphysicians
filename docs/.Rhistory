mosaicplot(smoking_gender_table[,c("Yes","No")], # we select only the 'yes/no' answers
main = "Mosaic plot of smoking status by gender",
xlab = "Gender",
ylab = "Smoked at least 100 cigarettes?",
col = c("steelblue"))
# Mosaic plot
mosaicplot(smoking_gender_table[,c("Yes","No")], # we select only the 'yes/no' answers
main = "Mosaic plot of smoking status by gender",
xlab = "Gender",
ylab = "Smoked at least 100 cigarettes?",
col = c("steelblue"))
# We first create a table of the data we want to plot in the mosaic plot
(smoking_gender_table <- table(merged_nhanes$RIAGENDR, merged_nhanes$SMQ020))
# We select only the "Yes" and "No" columns
smoke_table <- smoking_gender_table[, c("Yes", "No")]
# We transpose so rows correspond to the colors we want
smoke_table_t <- t(smoke_table)
smoke_table_t
# We first create a table of the data we want to plot in the mosaic plot
(smoking_gender_table <- table(merged_nhanes$SMQ020, merged_nhanes$RIAGENDR))
# We select only the "Yes" and "No" columns
smoke_table <- smoking_gender_table[, c("Yes", "No")]
# We first create a table of the data we want to plot in the mosaic plot
(smoking_gender_table <- table(merged_nhanes$SMQ020, merged_nhanes$RIAGENDR))
# We select only the "Yes" and "No" rows
smoke_table <- smoking_gender_table[c("Yes", "No") ,]
# We transpose so rows correspond to the colors we want
smoke_table_t <- t(smoke_table)
# We select only the "Yes" and "No" rows
(smoke_table <- smoking_gender_table[c("Yes", "No") ,])
# Mosaic plot
mosaicplot(smoke_table,
main = "Mosaic plot of smoking status by gender",
xlab = "Gender",
ylab = "Smoked at least 100 cigarettes?",
col = c("steelblue", "salmon"))
# Mosaic plot
mosaicplot(smoke_table,
main = "Mosaic plot of smoking status by gender",
xlab = "Smoked at least 100 cigarettes?",
ylab = "Gender",
col = c("steelblue", "salmon"))
# We first create a table of the data we want to plot in the mosaic plot
(smoking_gender_table <- table(merged_nhanes$SMQ020, merged_nhanes$RIAGENDR))
# We select only the "Yes" and "No" rows
(smoke_table <- smoking_gender_table[c("Yes", "No") ,])
# Mosaic plot
mosaicplot(smoke_table,
main = "Mosaic plot of smoking status by gender",
xlab = "Smoked at least 100 cigarettes?",
ylab = "Gender",
col = c("skyblue", "salmon"))
(gender_table <- table(merged_nhanes$RIAGENDR))
pie(x = gender_table,
labels = c("Female", "Male"),
col = c("skyblue", "salmon"),
main = "Gender Distribution")
# We first create a table of the data we want to plot in the mosaic plot
(smoking_gender_table <- table(merged_nhanes$SMQ020, merged_nhanes$RIAGENDR))
# We select only the "Yes" and "No" rows
(smoke_table <- smoking_gender_table[c("Yes", "No") ,])
# Mosaic plot
mosaicplot(smoke_table,
main = "Mosaic plot of smoking status by gender",
xlab = "Smoked at least 100 cigarettes?",
ylab = "Gender",
col = c("skyblue", "salmon"))
library(forestplot)
# Calculate summary statistics by gender
summary_stats <- merged_nhanes %>%
filter(!is.na(BPXSY1)) %>%                      # Remove NAs for BPXSY1
group_by(RIAGENDR) %>%                          # Group by gender
summarise(
mean = mean(BPXSY1),
sd = sd(BPXSY1),
n = n(),
lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n)
) %>%
ungroup()
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = "steelblue", line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# We calculate summary statistics by gender
summary_stats <- merged_nhanes %>%
filter(!is.na(BPXSY1)) %>% # We remove NAs for BPXSY1
group_by(RIAGENDR) %>%
summarise(
mean = mean(BPXSY1),
sd = sd(BPXSY1),
n = n(),
lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n)
) %>%
ungroup()
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = "steelblue", line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = c("steelblue", "salmon"),
line = c("steelblue", "salmon")),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = c("steelblue", "salmon"),
line = c("steelblue", "salmon")),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = c("steelblue", "salmon"),
line = c("steelblue", "salmon")),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = "steelblue",
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
txt_gp = fpTxtGp(xlab = gpar(cex = 1.2),
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
txt_gp = fpTxtGp(xlab = gpar(cex = 1.2)),
col = fpColors(box = "steelblue",
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
txt_gp = fpTxtGp(xlab = gpar(cex = 1)),
col = fpColors(box = "steelblue",
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
#txt_gp = fpTxtGp(xlab = gpar(cex = 1)),
col = fpColors(box = "steelblue",
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Create the forest plot
forestplot(labeltext = c("Female","Male"),
mean = summary_stats$mean,
lower = summary_stats$lower,
upper = summary_stats$upper,
zero = 120,
grid = TRUE,
ci.vertices = TRUE,
xlab = "Systolic BP (95% CI) [mmHg]",
col = fpColors(box = "steelblue",
line = "steelblue"),
title = "Forest plot of systolic BP by gender")
# Let us draw a heat map of different variables for the first 20 participants in
# the data set
heatmap_data <- merged_nhanes %>%
slice(1:20) %>%
select(RIDAGEYR, DMDHHSIZ, BMXWT, BMXHT, BPXSY1)
heatmap_data <- as.matrix(heatmap_data)
# Create the heat map
heatmap(x = heatmap_data,
Colv = NA, Rowv = NA,
scale = "column", # We standardize by column (by variable)
col = colorRampPalette(c("steelblue", "white", "darkred"))(100),
xlab="Variable", ylab="Participant", main="Heatmap",
cexRow=0.7, cexCol=0.7)
# Create the heat map
heatmap(x = heatmap_data,
Colv = NA, Rowv = NA,
scale = "column", # We standardize by column (by variable)
col = colorRampPalette(c("skyblue", "white", "salmon"))(100),
xlab="Variable", ylab="Participant", main="Heatmap",
cexRow=0.7, cexCol=0.7)
library(survival)
# Filter out data outside of window (> 24 months)
merged_nhanes_no_outliers <- merged_nhanes_with_mort[merged_nhanes_with_mort$PERMTH_INT <= 24, ]
# Fit Kaplan–Meier survival curves
fit <- survfit(Surv(PERMTH_INT, MORTSTAT) ~ 1,
data = merged_nhanes_no_outliers)
# Plot in base R
plot(fit,
col = "steelblue",
lwd = 2,
xlab = "Time (months)",
ylab = "Survival probability",
ylim = c(0.7,1),
main = "Kaplan–Meier survival curve")
# Create the heat map
ggplot(heatmap_scaled, aes(x = Variable, y = factor(SEQN), fill = Value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "salmon") +
labs(x = "Variable", y = "Participant (SEQN)", fill = "Z-score",
title = "Heatmap") +
theme_minimal() +
theme(axis.text.y = element_text(size = 6))
# Create the heat map
ggplot(heatmap_scaled, aes(x = Variable, y = factor(SEQN), fill = Value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "skyblue", mid = "violet", high = "salmon") +
labs(x = "Variable", y = "Participant (SEQN)", fill = "Z-score",
title = "Heatmap") +
theme_minimal() +
theme(axis.text.y = element_text(size = 6))
# Create the heat map
ggplot(heatmap_scaled, aes(x = Variable, y = factor(SEQN), fill = Value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "salmon") +
labs(x = "Variable", y = "Participant (SEQN)", fill = "Z-score",
title = "Heatmap") +
theme_minimal() +
theme(axis.text.y = element_text(size = 6))
ggplot(merged_nhanes, aes(x = RIDAGEYR, y = BPXSY1)) +
geom_point(alpha = 0.5, col = "steelblue") +
labs(title = "Scatterplot of age vs. systolic BP",
x = "Age of participant [years]",
y = "Systolic blood pressure (1st reading) [mmHg]") +
theme_minimal()
ggplot(data = merged_nhanes, aes(x = factor(RIAGENDR, labels = c("Male", "Female")), y = BPXSY1, fill = factor(RIAGENDR))) +
geom_boxplot() +
scale_fill_manual(values = c("salmon", "skyblue")) +
labs(title = "Box plot of systolic BP by gender",
x = "Gender",
y = "Systolic BP (1st reading) [mmHg]") +
theme_minimal() +
theme(legend.position = "none")
ggplot(avg_bp, aes(x = age_group, y = mean_bp)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Bar plot of mean systolic BP by age group",
x = "Age group [years]",
y = "Mean systolic BP [mmHg]") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(merged_nhanes, aes(x = BMXBMI)) +
geom_histogram(bins = 30, fill = "steelblue", color = "white") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Count") +
theme_minimal()
ggplot(avg_bp_with_midpoints, aes(x = age_mid, y = mean_bp)) +
geom_line(col = "steelblue") +
geom_point(col = "steelblue") +
labs(title = "Mean systolic BP by age group",
x = "Age (midpoint of group) [years]",
y = "Mean systolic BP [mmHg]") +
theme_minimal()
# Count proportions for each gender
gender_counts <- merged_nhanes %>%
filter(!is.na(RIAGENDR)) %>%                     # Remove NAs if any
count(Gender = RIAGENDR) %>%                      # Count by gender, rename column to 'Gender'
mutate(
prop = n / sum(n),                              # Compute proportion
ypos = cumsum(prop) - 0.5 * prop                # Compute y position for label
)
ggplot(gender_counts, aes(x = "", y = prop, fill = Gender)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
geom_text(aes(y = ypos, label = scales::percent(prop)), color = "white") +
scale_fill_manual(values = c("salmon", "skyblue")) +
labs(title = "Pie chart of gender distribution") +
theme_void()
library(ggmosaic)
ggplot(data = merged_nhanes[merged_nhanes$SMQ020 %in% c("Yes","No"),]) +
geom_mosaic(aes(x = product(RIAGENDR), fill = SMQ020)) +
scale_fill_manual(values = c("salmon", "skyblue")) +
labs(x = "Gender", y = "Smoked at least 100 cigarettes?", title = "Mosaic plot of smoking status by gender") +
theme_minimal() +
theme(legend.position = "none")
# Calculate summary statistics by gender
forest_df <- merged_nhanes %>%
filter(!is.na(BPXSY1), !is.na(RIAGENDR)) %>%
group_by(Gender = RIAGENDR) %>%
summarise(
mean = mean(BPXSY1),
sd = sd(BPXSY1),
n = n(),
lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n),
.groups = "drop"
)
ggplot(forest_df, aes(x = mean, y = Gender)) +
geom_point(size = 3, color = "steelblue") +
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "steelblue") +
geom_vline(xintercept = 120, linetype = "dashed") +
labs(title = "Forest plot of systolic BP by gender",
x = "Systolic BP (95% CI) [mmHg]",
y = "") +
theme_minimal()
# Let us draw a heat map of different variables for the first 20 participants in
# the data set
heatmap_data <- merged_nhanes %>%
slice(1:20) %>%
select(SEQN, RIDAGEYR, DMDHHSIZ, BMXWT, BMXHT, BPXSY1)
# We reshape to long format and standardize
heatmap_scaled <- heatmap_data %>%
mutate(across(-SEQN, scale)) %>%
pivot_longer(-SEQN, names_to = "Variable", values_to = "Value")
# Create the heat map
ggplot(heatmap_scaled, aes(x = Variable, y = factor(SEQN), fill = Value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "salmon") +
labs(x = "Variable", y = "Participant (SEQN)", fill = "Z-score",
title = "Heatmap") +
theme_minimal() +
theme(axis.text.y = element_text(size = 6))
library(ggalluvial)
# We will draw an alluvial plot of the three systolic blood pressure readings of the first 50 participants with no NA values in the corresponding columns
bp_data <- merged_nhanes %>%
filter(!is.na(BPXSY1),
!is.na(BPXSY2),
!is.na(BPXSY3)) %>%
slice(1:50) %>%
select(SEQN, BPXSY1, BPXSY2, BPXSY3)
# We put the BP reading into three groups
bp_data <- bp_data %>%
mutate(BPXSY1 = cut(BPXSY1, breaks = c(0, 120, 130, 200),
labels = c("[0-120)", "[120-130)", "[130-200)"),
right = FALSE)) %>%
mutate(BPXSY2 = cut(BPXSY2, breaks = c(0, 120, 130, 200),
labels = c("[0-120)", "[120-130)", "[130-200)"),
right = FALSE)) %>%
mutate(BPXSY3 = cut(BPXSY3, breaks = c(0, 120, 130, 200),
labels = c("[0-120)", "[120-130)", "[130-200)"),
right = FALSE))
# We reshape to long format for ggalluvial
bp_long <- bp_data %>%
pivot_longer(cols = starts_with("BPXSY"),
names_to = "Reading",
values_to = "Systolic_BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6) +
geom_stratum(width = 0.5) +
geom_text(stat = "stratum", size = 3) +
scale_fill_manual(values = c("steelblue1", "steelblue", "steelblue4")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6) +
geom_stratum(width = 0.5) +
geom_text(stat = "stratum", size = 3) +
scale_fill_manual(values = c("skyblue", "steelblue", "steelblue4")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6) +
geom_stratum(width = 0.5) +
geom_text(stat = "stratum", size = 3) +
scale_fill_manual(values = c("skyblue", "steelblue", "salmon")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6) +
geom_stratum(width = 0.5, color = "white") +
geom_text(stat = "stratum", size = 3) +
scale_fill_manual(values = c("skyblue", "steelblue", "salmon")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6, color = "white") +
geom_stratum(width = 0.5, color = "white") +
geom_text(stat = "stratum", size = 3) +
scale_fill_manual(values = c("skyblue", "steelblue", "salmon")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6, color = "white") +
geom_stratum(width = 0.5, color = "white") +
geom_text(stat = "stratum", size = 3, geom_flow) +
scale_fill_manual(values = c("skyblue", "steelblue", "salmon")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# Alluvial plot
ggplot(bp_long,
aes(x = Reading,
stratum = Systolic_BP,
alluvium = SEQN,
fill = Systolic_BP,
label = Systolic_BP)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", alpha = 0.6, color = "white") +
geom_stratum(width = 0.5, color = "white") +
geom_text(stat = "stratum", size = 3, color = "white") +
scale_fill_manual(values = c("skyblue", "steelblue", "salmon")) +
theme_minimal() +
labs(title = "Alluvial plot of systolic BP",
x = "Systolic blood pressure (1st-3rd readings)",
y = "Participants",
fill = "Systolic BP")
# We identify the different smoking status
table(merged_nhanes$SMQ040)
par(mfrow=c(3,1))
hist(merged_nhanes[merged_nhanes$SMQ040=="Not at all",]$BPXSY1,
breaks = 20,
freq = TRUE,
col = "skyblue",
xlab = "Systolic blood pressure (1st reading) [mmHg]",
main = "Histogram of systolic BP: not smoking")
